/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  CrowdSale,
  CrowdSaleInterface,
} from "../../../contracts/FLPCrowndsale.sol/CrowdSale";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "bnb_rate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "usdt_rate",
        type: "uint256",
      },
      {
        internalType: "address payable",
        name: "wallet",
        type: "address",
      },
      {
        internalType: "contract IERC20",
        name: "icotoken",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "buyer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "BuyTokenByBNB",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "buyer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "BuyTokenByUSDT",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "newRate",
        type: "uint256",
      },
    ],
    name: "SetBNBRate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "newRate",
        type: "uint256",
      },
    ],
    name: "SetUSDTRate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "contract IERC20",
        name: "tokenAddress",
        type: "address",
      },
    ],
    name: "SetUSDTToken",
    type: "event",
  },
  {
    inputs: [],
    name: "BNB_rate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "USDT_rate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_wallet",
    outputs: [
      {
        internalType: "address payable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "buyTokenByBNB",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "USDTAmount",
        type: "uint256",
      },
    ],
    name: "buyTokenByUSDT",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "BNBAmount",
        type: "uint256",
      },
    ],
    name: "getTokenAmountBNB",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "USDTAmount",
        type: "uint256",
      },
    ],
    name: "getTokenAmountUSDT",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "new_rate",
        type: "uint256",
      },
    ],
    name: "setBNBRate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "new_rate",
        type: "uint256",
      },
    ],
    name: "setUSDTRate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "token_address",
        type: "address",
      },
    ],
    name: "setUSDTToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "usdtToken",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawErc20",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001d6b38038062001d6b8339818101604052810190620000379190620002bb565b620000576200004b620000f160201b60201c565b620000f960201b60201c565b836002819055508260038190555081600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505050506200032d565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b6000819050919050565b620001d781620001c2565b8114620001e357600080fd5b50565b600081519050620001f781620001cc565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200022a82620001fd565b9050919050565b6200023c816200021d565b81146200024857600080fd5b50565b6000815190506200025c8162000231565b92915050565b60006200026f82620001fd565b9050919050565b6000620002838262000262565b9050919050565b620002958162000276565b8114620002a157600080fd5b50565b600081519050620002b5816200028a565b92915050565b60008060008060808587031215620002d857620002d7620001bd565b5b6000620002e887828801620001e6565b9450506020620002fb87828801620001e6565b93505060406200030e878288016200024b565b92505060606200032187828801620002a4565b91505092959194509250565b611a2e806200033d6000396000f3fe6080604052600436106100fe5760003560e01c8063610757e411610095578063a98ad46c11610064578063a98ad46c146102b6578063acb03d43146102e1578063c5d156511461031e578063f2fde38b14610347578063fc0c546a14610370576100fe565b8063610757e41461022057806366e226bd1461024b578063715018a6146102745780638da5cb5b1461028b576100fe565b806331927737116100d157806331927737146101bd5780633ccfd60b146101c75780633e3f2359146101de578063592a00e4146101f5576100fe565b8063157fc821146101035780631832d8b61461012e5780631b4622d61461016b5780632be8629914610194575b600080fd5b34801561010f57600080fd5b5061011861039b565b604051610125919061119a565b60405180910390f35b34801561013a57600080fd5b50610155600480360381019061015091906111e6565b6103a1565b604051610162919061119a565b60405180910390f35b34801561017757600080fd5b50610192600480360381019061018d91906111e6565b6103b8565b005b3480156101a057600080fd5b506101bb60048036038101906101b691906111e6565b610401565b005b6101c561044a565b005b3480156101d357600080fd5b506101dc6106b9565b005b3480156101ea57600080fd5b506101f361070a565b005b34801561020157600080fd5b5061020a61086e565b604051610217919061119a565b60405180910390f35b34801561022c57600080fd5b50610235610874565b6040516102429190611254565b60405180910390f35b34801561025757600080fd5b50610272600480360381019061026d91906112bf565b61089a565b005b34801561028057600080fd5b5061028961091d565b005b34801561029757600080fd5b506102a0610931565b6040516102ad91906112fb565b60405180910390f35b3480156102c257600080fd5b506102cb61095a565b6040516102d89190611375565b60405180910390f35b3480156102ed57600080fd5b50610308600480360381019061030391906111e6565b610980565b604051610315919061119a565b60405180910390f35b34801561032a57600080fd5b50610345600480360381019061034091906111e6565b610997565b005b34801561035357600080fd5b5061036e600480360381019061036991906113bc565b610be8565b005b34801561037c57600080fd5b50610385610c6c565b6040516103929190611375565b60405180910390f35b60025481565b6000600354826103b19190611418565b9050919050565b6103c0610c92565b806003819055507fbdaa37e3f6679857d8c3e80d172bd45af732a8658cf1d690c81ca96f5a443b5b816040516103f6919061119a565b60405180910390a150565b610409610c92565b806002819055507fb0cc740bbbfcd5af22ee3956c6b44d2d6f499e2a86cb11d915fcce88dca2113a8160405161043f919061119a565b60405180910390a150565b6000349050600061045a82610980565b90506000811161049f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610496906114cf565b60405180910390fd5b80600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016104fb91906112fb565b60206040518083038186803b15801561051357600080fd5b505afa158015610527573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061054b9190611504565b101561058c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105839061157d565b60405180910390fd5b813373ffffffffffffffffffffffffffffffffffffffff163110156105e6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105dd9061157d565b60405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc839081150290604051600060405180830381858888f1935050505015801561064e573d6000803e3d6000fd5b5061067c600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163383610d10565b7ff695091b71a5c3ea41510251da89a66470bbcf1ee118f820a1bab8739e29ea5033826040516106ad92919061159d565b60405180910390a15050565b6106c1610c92565b3373ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f19350505050158015610707573d6000803e3d6000fd5b50565b610712610c92565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016107ac91906112fb565b60206040518083038186803b1580156107c457600080fd5b505afa1580156107d8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107fc9190611504565b6040518363ffffffff1660e01b815260040161081992919061159d565b602060405180830381600087803b15801561083357600080fd5b505af1158015610847573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061086b91906115fe565b50565b60035481565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6108a2610c92565b80600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f43036333e58a6f9255617b54ec9f5825590c8ee695a222dc35e5001927f07151816040516109129190611375565b60405180910390a150565b610925610c92565b61092f6000610d96565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600254826109909190611418565b9050919050565b60006109a2826103a1565b9050813373ffffffffffffffffffffffffffffffffffffffff163110156109fe576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109f59061157d565b60405180910390fd5b60008111610a41576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a38906114cf565b60405180910390fd5b80600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610a9d91906112fb565b60206040518083038186803b158015610ab557600080fd5b505afa158015610ac9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610aed9190611504565b1015610b2e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b259061157d565b60405180910390fd5b610b7e600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1633600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1685610e5a565b610bab600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163383610d10565b7f5c0161fad3fa89cfebd4a74115d9f81661cdd1b9008d05a238ea9d65088e20643382604051610bdc92919061159d565b60405180910390a15050565b610bf0610c92565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610c60576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c579061169d565b60405180910390fd5b610c6981610d96565b50565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610c9a610ee3565b73ffffffffffffffffffffffffffffffffffffffff16610cb8610931565b73ffffffffffffffffffffffffffffffffffffffff1614610d0e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d0590611709565b60405180910390fd5b565b610d918363a9059cbb60e01b8484604051602401610d2f92919061159d565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610eeb565b505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b610edd846323b872dd60e01b858585604051602401610e7b93929190611729565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610eeb565b50505050565b600033905090565b6000610f4d826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff16610fb39092919063ffffffff16565b9050600081511480610f6f575080806020019051810190610f6e91906115fe565b5b610fae576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fa5906117d2565b60405180910390fd5b505050565b6060610fc28484600085610fcb565b90509392505050565b606082471015611010576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161100790611864565b60405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff16858760405161103991906118fe565b60006040518083038185875af1925050503d8060008114611076576040519150601f19603f3d011682016040523d82523d6000602084013e61107b565b606091505b509150915061108c87838387611098565b92505050949350505050565b606083156110fb576000835114156110f3576110b38561110e565b6110f2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110e990611961565b60405180910390fd5b5b829050611106565b6111058383611131565b5b949350505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b6000825111156111445781518083602001fd5b806040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161117891906119d6565b60405180910390fd5b6000819050919050565b61119481611181565b82525050565b60006020820190506111af600083018461118b565b92915050565b600080fd5b6111c381611181565b81146111ce57600080fd5b50565b6000813590506111e0816111ba565b92915050565b6000602082840312156111fc576111fb6111b5565b5b600061120a848285016111d1565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061123e82611213565b9050919050565b61124e81611233565b82525050565b60006020820190506112696000830184611245565b92915050565b600061127a82611213565b9050919050565b600061128c8261126f565b9050919050565b61129c81611281565b81146112a757600080fd5b50565b6000813590506112b981611293565b92915050565b6000602082840312156112d5576112d46111b5565b5b60006112e3848285016112aa565b91505092915050565b6112f58161126f565b82525050565b600060208201905061131060008301846112ec565b92915050565b6000819050919050565b600061133b61133661133184611213565b611316565b611213565b9050919050565b600061134d82611320565b9050919050565b600061135f82611342565b9050919050565b61136f81611354565b82525050565b600060208201905061138a6000830184611366565b92915050565b6113998161126f565b81146113a457600080fd5b50565b6000813590506113b681611390565b92915050565b6000602082840312156113d2576113d16111b5565b5b60006113e0848285016113a7565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061142382611181565b915061142e83611181565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615611467576114666113e9565b5b828202905092915050565b600082825260208201905092915050565b7f416d6f756e74206973207a65726f000000000000000000000000000000000000600082015250565b60006114b9600e83611472565b91506114c482611483565b602082019050919050565b600060208201905081810360008301526114e8816114ac565b9050919050565b6000815190506114fe816111ba565b92915050565b60006020828403121561151a576115196111b5565b5b6000611528848285016114ef565b91505092915050565b7f496e73756666696369656e74206163636f756e742062616c616e636500000000600082015250565b6000611567601c83611472565b915061157282611531565b602082019050919050565b600060208201905081810360008301526115968161155a565b9050919050565b60006040820190506115b260008301856112ec565b6115bf602083018461118b565b9392505050565b60008115159050919050565b6115db816115c6565b81146115e657600080fd5b50565b6000815190506115f8816115d2565b92915050565b600060208284031215611614576116136111b5565b5b6000611622848285016115e9565b91505092915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000611687602683611472565b91506116928261162b565b604082019050919050565b600060208201905081810360008301526116b68161167a565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b60006116f3602083611472565b91506116fe826116bd565b602082019050919050565b60006020820190508181036000830152611722816116e6565b9050919050565b600060608201905061173e60008301866112ec565b61174b60208301856112ec565b611758604083018461118b565b949350505050565b7f5361666545524332303a204552433230206f7065726174696f6e20646964206e60008201527f6f74207375636365656400000000000000000000000000000000000000000000602082015250565b60006117bc602a83611472565b91506117c782611760565b604082019050919050565b600060208201905081810360008301526117eb816117af565b9050919050565b7f416464726573733a20696e73756666696369656e742062616c616e636520666f60008201527f722063616c6c0000000000000000000000000000000000000000000000000000602082015250565b600061184e602683611472565b9150611859826117f2565b604082019050919050565b6000602082019050818103600083015261187d81611841565b9050919050565b600081519050919050565b600081905092915050565b60005b838110156118b857808201518184015260208101905061189d565b838111156118c7576000848401525b50505050565b60006118d882611884565b6118e2818561188f565b93506118f281856020860161189a565b80840191505092915050565b600061190a82846118cd565b915081905092915050565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b600061194b601d83611472565b915061195682611915565b602082019050919050565b6000602082019050818103600083015261197a8161193e565b9050919050565b600081519050919050565b6000601f19601f8301169050919050565b60006119a882611981565b6119b28185611472565b93506119c281856020860161189a565b6119cb8161198c565b840191505092915050565b600060208201905081810360008301526119f0818461199d565b90509291505056fea264697066735822122072f016726c6028754e970fe380dc49dc62e6b0113c198102b9a71102ecce454064736f6c63430008090033";

type CrowdSaleConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CrowdSaleConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CrowdSale__factory extends ContractFactory {
  constructor(...args: CrowdSaleConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    bnb_rate: PromiseOrValue<BigNumberish>,
    usdt_rate: PromiseOrValue<BigNumberish>,
    wallet: PromiseOrValue<string>,
    icotoken: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<CrowdSale> {
    return super.deploy(
      bnb_rate,
      usdt_rate,
      wallet,
      icotoken,
      overrides || {}
    ) as Promise<CrowdSale>;
  }
  override getDeployTransaction(
    bnb_rate: PromiseOrValue<BigNumberish>,
    usdt_rate: PromiseOrValue<BigNumberish>,
    wallet: PromiseOrValue<string>,
    icotoken: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      bnb_rate,
      usdt_rate,
      wallet,
      icotoken,
      overrides || {}
    );
  }
  override attach(address: string): CrowdSale {
    return super.attach(address) as CrowdSale;
  }
  override connect(signer: Signer): CrowdSale__factory {
    return super.connect(signer) as CrowdSale__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CrowdSaleInterface {
    return new utils.Interface(_abi) as CrowdSaleInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CrowdSale {
    return new Contract(address, _abi, signerOrProvider) as CrowdSale;
  }
}
